apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId 'com.ryanst.app'
        multiDexEnabled true
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        ryanstConfig {
            storeFile file(RELEASE_STOREFILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    flavorDimensions "dev", "prod"

    productFlavors {
        dev {
            minSdkVersion 21
            dimension "dev"
        }
        prod {
            minSdkVersion 14
            dimension "prod"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.ryanstConfig
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
//                            && 'release'.equals(variant.buildType.name)) {
//                        def apkFile = new File(
//                                output.outputFile.getParent(),
//                                "ryanst${variant.flavorName}_v${variant.versionName}_${buildTime()}.apk")
//                        output.outputFile = apkFile
//                    }
//                }
//            }
        }

        debug {
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
//            testCoverageEnabled = true
            debuggable true
            signingConfig signingConfigs.ryanstConfig
        }
    }

    lintOptions {
        abortOnError false        // true by default
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true       // false by default
        quiet true                // false by default
    }

    //输入参数中包含 -Pmc 时才进行多渠道构建
    if (project.hasProperty('mc')) {
        def path = "./build-types/type.txt"
        //多渠道构建
        println "multi channel"
        file(path).eachLine { line ->
            println "channel name : " + line
            android.productFlavors.create(line, {
                manifestPlaceholders = [CHANNEL_VALUE: "" + line]
            })
        }
    } else {
        buildTypes.release.manifestPlaceholders = [CHANNEL_VALUE: "999"]
        buildTypes.debug.manifestPlaceholders = [CHANNEL_VALUE: "999"]
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

buildscript {
    repositories {
        maven { url "http://repo1.maven.org/maven2" }
    }
    dependencies {
        //hugo 函数log
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
    }
}

apply plugin: 'com.jakewharton.hugo'

repositories {
    maven { url "https://jitpack.io" }
    maven { url "http://repo1.maven.org/maven2" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':ryanstlib')
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.android.support:design:25.0.0'
    //junit
    testCompile 'junit:junit:4.12'
    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.1'
    //butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    //supertoast
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    //logger
    compile 'com.orhanobut:logger:1.15'

    //eventbus
    compile 'org.greenrobot:eventbus:3.0.0'
    //友盟统计
    compile 'com.umeng.analytics:analytics:latest.integration'

    //rxJava
    compile 'io.reactivex:rxjava:1.1.6'
    //rxandroid
    compile 'io.reactivex:rxandroid:1.2.1'
    //rxpermisiion
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    //rxBinding
    compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-design:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'
    compile 'com.android.support:support-annotations:25.0.1'
    compile 'com.zhengjt:floatingball:1.0.1'
    compile 'com.zxy.android:recovery:0.1.4'

    compile "com.facebook.stetho:stetho:1.5.0"
    compile "com.facebook.stetho:stetho-okhttp3:1.5.0"
}

def buildTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
